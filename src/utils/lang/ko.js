/*
 * English language Pack
 */
/* eslint-disable */
export default {
  public: { 
    
  },
  error: {
    error3080001: 'RAM이 부족해 작업에 실패했습니다.',
    error3080002: 'NET자원이 부족해 작업에 실패했습니다.',
    error3080004: 'CPU자원이 부족해 작업에 실패했습니다.',
    error3040005: 'Operation overdue. Please try again.',
    error3050003: 'Account does not exist, the amount of assets is incorrect, etc.',
    error3090003: 'Permission lost',
  },
  toastTip: { 
    success: '작업 성공',
    fail: '작업 실패',
  },
  resources: {
    resources: '자원',
    data: '데이터',
    mainData: '중요 데이터',
    rexPoolCount: 'REX 전용 EOS 풀의 총량',
    allNetRexThroughput: 'REX 유통량',
    rexFormula: 'REX 가격 공식',
    rexIncome: 'REX 수익 ',
    rentalOfResources: '임대',
    rexFee: 'RAM 수수료',
    shortNameFee: 'Bidname 계정 수익',
    yearRate: '예상 연수익',
    rentalInfo: '임대 상황',
    leasedEos: '임대된 EOS',
    abledLeasedEos: '임대 가능한 EOS',
    leasedRate: '임대 비율',
    rexPoolCountTip: 'REX를 매수한 EOS + 자원 임대 + Bidname 계정 수익',
    rexPrice: 'REX 가격',
    buyRexNote: 'REX 거래(매수) 설명',
    sellRexNote: 'REX 거래(매도) 설명',
    abledSellRam: '매도 가능 KB:',
    ramBalance: 'KB 잔액',
    ramTradeNote: 'RAM 거래 설명',
    trade: '거래금액 ',
    formula: 'RAM 가격 공식',
    formulaTitle: 'RAM 가격은 Bancor계산 방식으로 나오며, 유도 가능합니다. 계산 방법은 다음과 같습니다:',
    RAMPrice: 'RAM 가격',
    EOSPool: 'EOS 풀의 잔액',
    Unallocated: '할당되지 않은 RAM',
    ramBuyTitle: 'RAM 거래(매수) 설명',
    buyRAM: 'RAM 가격은 실시간으로 변동하고 있어 실제 성사되는 수량은 결과에 따라 달라질 수 있습니다.',
    ramSellTitle: 'REX 거래(매도) 설명',
    sellRAM1: 'RAM 가격은 실시간으로 변동하고 있어 실제 성사되는 수량은 결과에 따라 달라질 수 있습니다.',
    sellRAM2: "이미 사용 중인 RAM은 매도할 수 없습니다.",
    sellRAM3: '원활한 거래를 위해 1KB 이상의 RAM을 보유해야 합니다.',
    direction: '방향',
    amount: '금액',
    time: '시간',
    buyRexNote_1: '· REX 매수 전, 먼저 최소 21개 BP에 투표하시거나, 프록시 계정에 위임해야 합니다.',
    buyRexNote_2: '· 만약 투표 조건을 만족하지 않을 경우, REX 매수와 동시에 Newdex 프록시 계정으로 투표가 위임됩니다.',
    buyRexNote_3: '· REX 매수 후, 4일이 지나야 REX를 매도하고 EOS로 바꿀 수 있습니다.',
    sellRexNote_3: '· REX 매도 시, REX 전용 EOS 풀의 대부분의 EOS가 임대 중일 경우, 새로운 사용자가 REX를 매수하거나 자원을 임대가 끝날 때까지 기다리셔야 합니다. (최대 30일)',
    rexInfo_1_1: '2019년 5월, EOS 메인넷은 시스템 자원 임대 시장(CPU/NET)을 정식으로 출시했고,',
    rexInfo_1_2: '유일한 지분 토큰인 REX를',
    rexInfo_1_3: '사고 팔 수 있습니다.',
    rexInfo_2_1: '정해진 룰에 따라,',
    rexInfo_2_2: 'REX의 가격은 하락하지 않기 때문에,',
    rexInfo_2_3: 'REX를 오래 홀딩 할수록 더 많은 수익이 발생합니다.',
    rexInfo_3_1: 'REX 매수,',
    rexInfo_3_2: 'EOS는 REX 전용 EOS 풀로 들어가며, EOS 메인넷에서 대여됩니다.',
    rexInfo_4_1: 'REX 매도,',
    rexInfo_4_2: '매수 매도의 차액이 REX 홀딩을 통한 수익입니다.',
    rexInfo_5_1: 'REX를 통한 3가지 수익 방식:',
    rexInfo_5_2: '자원 임대 + RAM 수수료 + Bidname 계정 수익,',
    rexInfo_5_3: '해당 EOS는 모두 REX 전용 풀로 들어갑니다.',
    buyPrice: '매수 가격',
    sellPrice: '매도가',
    buyNum: '매수 수량',
    sellNum: '매도량',
    abledEos: '가용 EOS',
    abledSellRex: '매도 가능REX',
    rexBalance: 'REX잔액',
    rexTradeNote: 'REX거래 설명',
    tradeHistory: '거래 기록',
    vol: '체결 금액',
    amt: '거래량',
    unlock: '언락',
    buyInStaked: '스태이킹된 자원을 사용해 매수',
    // cpu & net
    lease: '임대',
    nowEosPoolCount: '현재 EOS풀 총량',
    cpuLeaseTip: '2019년 5월, EOS 메인넷은 시스템 자원 임대 시장(CPU/NET)을 정식으로 런칭했습니다. ',
    cpuLeaseTip1: 'EOS 프로젝트 및 사용자는 빠르게 CPU/NET 자원을 임대할 수 있습니다. 메인넷은 EOS 풀의 EOS를 균일하게 할당하며, REX 거래로 임대 수익을 분배합니다.',
    rentCpu: 'CPU/NET 임차',
    lendCpu: 'CPU/NET 임대 ',
    rent: ' 임차',
    lend: 'CPU 임대',
    resType: '자원 종류',
    rentPriceLong: '임대 가격',
    rentTime: '임대 기한',
    dateLong: '30일',
    rentNum: '임대 수량',
    inputTip: '임대 수량을 입력해주세요',
    rentPrice: '임대료',
    isRenewal: '자동 임차 연장',
    yes: '예',
    no: '아니오',
    rentTip: '임대 연장 설명',
    renewalNum: '임대 연장 비용',
    inputTip2: '임대 연장 금익을 입력해주세요',
    allRentPrice: '총 임대 금액',
    lendTip1_1: 'REX 자원 임대 시장, ',
    lendTip1_2: 'REX 구매',
    lendTip1_3: '를 통해 CPU를 임대할 수 있습니다',
    lendTip3_1: 'REX 매도,',
    lendTip3_2: 'REX 매수/매도 시 가격 차이가 곧 수익입니다.(REX 가격은 하락하지 않습니다)',
    toBuyRex: 'REX 매수',
    leaseOrder: '임대 중인 주문',
    rentShort: '임대',
    renting: '임대 중',
    count: '수량',
    number: '수량',
    leasePrice: '비용',
    overTime: '만료 시간',
    mgt: '관리',
    mgtRenewalNum: '임대 연장 수수료 관리',
    in: '입금',
    out: '출금',
    inned: '입금됨',
    inputTip3: '수량을 입력해주세요.',
    sureIn: '확인',
    sureOut: '회수 확인',
    rentTip1: '임대 연장 수량 = 미리 입금된 임대 연장 비용 ÷ 임대 연장 시의 최신 가격.',
    rentTip2: '임대 연장 비용은 임대 만료 전에 언제든 입출금이 가능합니다.',
    sure: '확인',
    leaseType: '임대 유형',
    allPrice: '총 임대 금액 지불',
    surePay: '지불 확인',
    renewalTip: '임대 연장 설명',
    renewalTip1: '· 임대 연장 금액 예금 후, EOS 메인넷은 임대가 만료될 때 최신 가격에 따라 자동으로 CPU/NET 자원 임대를 연장합니다.',
    renewalTip2: '· 임대 만료 전에 언제든 임대 연장 주기를 늘리거나 줄일 수 있습니다.',
    ysdApr: '전일 연간 수익률',
    day: '일',
    leaseTerm: '임대 연장 기한',
    beginTime: '임대 개시일',
    addLeaseTerm: '기한 늘리기',
    subLeaseTerm: '기한 줄이기',
    addRent: '임대 금액 추가',
    subRent: '임대 금액 반환',
    abledBackRwnt: '반환 가능한 임대 금액',
    leaseFail: '임대 연장 실패',
    leaseFailTip1: '만약 귀하의 자원 임대 주문이 연장에 실패할 경우, 미사용된 금액은 언제든지 출금할 수 있습니다.',
    canExtract: '출금 가능 금액',
    extractAll: '전부 출금',
    fullNov: '자세한 소개',
    useStaked: '스태이킹된 자원을 사용해 REX 매수',
    useStakedTip: '스태이킹된 자원을 언스태이킹하면, 3일의 언스태이킹 소요 시간 없이, 해당EOS로 즉시 REX를 구매할 수 있습니다.',
    stakedAccount: '스태이킹 계정',
    stakedAccountTip: '다른 스태이킹 계정으로도 언스태이킹을 하실 수 있습니다.',
    unstakedAndBuy: '언스태이킹하고, 즉시 REX 매수',
    actionTip: '자원 부족으로 인해 조작에 실패할 수 있으므로, 충분한 자원을확보해주세요.',
    hadDays: '연장한 임대 기한',
    totalDays: '총 임대 연장 기한',
    monthPrice: 'EOS*30일 / EOS',
    thisAct: '현재 계정',
    otherAct: '다른 계정',
    xitongzy: '시스템 자원 임대',
    tipsResources: 'Currently, the wallets that support the lease of PowerUp model are [Dapp side] TokenPocket, MYKEY, Start, imToken; [PC side] Anchor, Scatter, Leaf wallet;',
    yjpay: '예상 소비',
    zulintime: '임대 24 시간',
    topowerup: '새로운 자원 모델 로 가서 임대 가능',
  },
  tv: {
    miao: 'S',
    minute: '1min',
    minute1: 'M',
    minute5: '5min',
    minute10: '10min',
    minute15: '15min',
    minute30: '30min',
    hour: '1hour',
    hour1: 'H',
    hour4: '4hour',
    day: '1day',
    day1: 'D',
    week: '1week',
    mon: '1mon',
    kline: 'K Line',
    depth: 'Depth',
    price: 'Entrusted Price',
    addQuantity: 'Cumulative Volume',
    timeFormat: '데이트',
    addMoney: 'Cumulative Amount',
  },
  nav: {
    fullScreen: 'fullScreen',
    fullScreenOut: 'fullScreenOut'
  }
}